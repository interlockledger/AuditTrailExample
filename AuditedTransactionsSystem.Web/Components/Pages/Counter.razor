@page "/counter"
@using InterlockLedger.Rest.Client
@rendermode InteractiveServer
@inject AuditTrailClient NodeApi
@inject IHttpContextAccessor ContextAccessor

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Increment</button>
&nbsp;&nbsp;&nbsp;
<button class="btn btn-primary" @onclick="DecrementCount">Decrement</button>
<hr />
<p role="status">Last audit: @lastAudit</p>
<button class="btn btn-primary" @onclick="UpdateLastDetails">Update Last Audit Details</button>
<p role="status">Details: @lastAuditDetails</p>

@code {
    private int currentCount = 0;
    private UniversalRecordReference? lastAudit;
    private AuditTrailEntry? lastAuditDetails;

    private void IncrementCount()
    {
        currentCount++;
        Audit(nameof(IncrementCount));
    }

    private void DecrementCount()
    {
        currentCount--;
        Audit(nameof(DecrementCount));
    }

    private void Audit(string action)
    {
        var result = NodeApi.AddToAuditTrialAsync("CounterUser", ContextAccessor.HttpContext?.TraceIdentifier ?? "?", action, $"Counter is now {currentCount}").Result;
        lastAudit = result?.Reference;
    }

    private void UpdateLastDetails()
    {
        if (lastAudit is not null)
            lastAuditDetails = NodeApi.GetAuditTrailEntryAsync(lastAudit).Result;
    }
}
